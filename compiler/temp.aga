Alan Graphcode Assembler v0.0.1

globalMem
  @-1: 2i64
  @-9: 0i64
  @-17: 1i64
  @-25: "true!"
  @-41: "\n"
  @-57: false
  @-65: "yikes"
  @-81: true
  @-89: "oof"

customEvents
  stdout: -1
  exit: 8
  stderr: -1
  _68bffb68_2f28_4a69_8131_8193ce9_THEN: 0
  _a3dd3ea6_789f_4889_ab4c_f81fa53_THEN: 0
  _ad9adac4_5c57_4ed4_8516_e58e832_THEN: 0
  _d210b4a5_ccd0_4c2c_9dea_07e08cf_TAIL: 0

handler for _start with size 11
  @0 = newarr(@-1, @0) #0
  @1 = eqi64(@-9, @-17) #1
  condfn(@0, @1, _68bffb68_2f28_4a69_8131_8193ce9_THEN) #2 <- [#0, #1]
  condfn(@0, @-57, _a3dd3ea6_789f_4889_ab4c_f81fa53_THEN) #3 <- [#2]
  condfn(@0, @-81, _ad9adac4_5c57_4ed4_8516_e58e832_THEN) #4 <- [#3]
  @9 = evalcond(@0, _d210b4a5_ccd0_4c2c_9dea_07e08cf_TAIL) #5 <- [#4]
  @10 = getR(@9, @0) #6 <- [#5]
  @-9223372036854775808 = refv(@10, @0) #7 <- [#6]

handler for stdout with size 2
  @1 = stdoutp(@0, @0) #0

handler for exit with size 2
  @1 = exitop(@0, @0) #0

handler for stderr with size 2
  @1 = stderrp(@0, @0) #0

closure for _68bffb68_2f28_4a69_8131_8193ce9_THEN with size 11
  @2 = catstr(@-25, @-41) #0
  @3 = stdoutp(@2, @0) #1 <- [#0]

closure for _a3dd3ea6_789f_4889_ab4c_f81fa53_THEN with size 11
  @4 = catstr(@-65, @-41) #0
  @5 = stdoutp(@4, @0) #1 <- [#0]
  @6 = noneM(@0, @0) #2
  @-9223372036854775808 = refv(@6, @0) #3 <- [#2]

closure for _ad9adac4_5c57_4ed4_8516_e58e832_THEN with size 11
  @7 = catstr(@-89, @-41) #0
  @8 = stdoutp(@7, @0) #1 <- [#0]

closure for _d210b4a5_ccd0_4c2c_9dea_07e08cf_TAIL with size 11
  emit(exit, @-9) #0
