/**
 * @std/httpserver - Built-in server for http
 *
 * Split from the client because of the automatic inclusion of event handlers when importing
 */

// Make sure we're using the same Request, Response definitions between the two
from @std/httpcommon import Connection, InternalRequest, InternalResponse, Request, Response, body, status, send

// Re-export Connection, Request, and Response

export Connection
export Request
export Response

// Re-export the body, status, and send functions
export body
export status
export send

/**
 * HTTP Server
 */

// The connection event
export event connection: Connection

// The special connection event with a signature like `event __conn: InternalRequest`
// This wrapper function takes the internal connection object, converts it to the user-friendly
// connection object, and then emits it on a new event for user code to pick up
on __conn fn (conn: InternalRequest) {
  emit connection new Connection {
    req: new Request {
      method: conn.method,
      url: conn.url,
      headers: toHashMap(conn.headers),
      body: conn.body,
    },
    res: new Response {
      status: 200, // If not set by the user, assume they meant it to be good
      headers: newHashMap('Content-Length', '0'), // If not set by the user, assume no data
      body: '', // If not set by the user, assume no data
      connId: conn.connId,
    },
  };
}
