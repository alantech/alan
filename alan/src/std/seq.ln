export fn{Rs} while "whileloophack" :: (() -> bool, () -> ()) -> ();
export fn{Js} while "(async (c, l) => { while ((await c()).val) { await l(); } })" :: (() -> bool, () -> ()) -> ();
export fn iter{T}(f: Mut{(i64) -> T}, n: i64) -> T[] {
  let out = {T[]}();
  let i = 0;
  while(fn = i < n, fn {
    out.push(f(i));
    let next = i + 1;
    i = next; // TODO: Needed for Rust codegen.
  });
  return out;
}